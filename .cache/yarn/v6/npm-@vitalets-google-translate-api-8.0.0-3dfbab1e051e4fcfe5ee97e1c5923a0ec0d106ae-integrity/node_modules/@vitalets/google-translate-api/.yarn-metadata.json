{
  "manifest": {
    "name": "@vitalets/google-translate-api",
    "version": "8.0.0",
    "description": "A free and unlimited API for Google Translate",
    "main": "index.js",
    "scripts": {
      "lint": "xo",
      "test": "nyc ava",
      "coverage": "nyc report --reporter=text-lcov | coveralls && nyc report --reporter=text-lcov > coverage.lcov && codecov",
      "release": "npm run lint && npm test && np --yolo --no-release-draft"
    },
    "husky": {
      "hooks": {
        "pre-commit": "npm run lint",
        "pre-push": "npm run lint && npm test"
      }
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/vitalets/google-translate-api.git"
    },
    "keywords": [
      "translate",
      "translator",
      "google",
      "translate",
      "api",
      "free",
      "language"
    ],
    "author": {
      "name": "Matheus Fernandes",
      "email": "npm@matheus.top",
      "url": "http://matheus.top"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/vitalets/google-translate-api/issues"
    },
    "homepage": "https://github.com/vitalets/google-translate-api#readme",
    "dependencies": {
      "configstore": "^5.0.1",
      "got": "^9.6.0"
    },
    "devDependencies": {
      "ava": "^3.15.0",
      "codecov": "^3.8.1",
      "coveralls": "^2.11.11",
      "husky": "^3.0.4",
      "np": "^7.6.0",
      "nyc": "^15.1.0",
      "xo": "^0.16.0"
    },
    "xo": {
      "space": 4,
      "parserOptions": {
        "ecmaScript": 7
      }
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-@vitalets-google-translate-api-8.0.0-3dfbab1e051e4fcfe5ee97e1c5923a0ec0d106ae-integrity/node_modules/@vitalets/google-translate-api/package.json",
    "readmeFilename": "README.md",
    "readme": "# google-translate-api\n[![Actions Status](https://github.com/vitalets/google-translate-api/workflows/autotests/badge.svg)](https://github.com/vitalets/google-translate-api/actions)\n[![NPM version](https://img.shields.io/npm/v/@vitalets/google-translate-api.svg)](https://www.npmjs.com/package/@vitalets/google-translate-api)\n[![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/sindresorhus/xo)\n[![Coverage Status](https://coveralls.io/repos/github/vitalets/google-translate-api/badge.svg?branch=master)](https://coveralls.io/github/vitalets/google-translate-api?branch=master)\n\nA **free** and **unlimited** API for Google Translate :dollar: :no_entry_sign: for Node.js.\n\n## Features \n\n- Auto language detection\n- Spelling correction\n- Language correction \n- Fast and reliable – it uses the same servers that [translate.google.com](https://translate.google.com) uses\n\n## Why this fork?\nThis fork of original [matheuss/google-translate-api](https://github.com/matheuss/google-translate-api) contains several improvements:\n\n- New option `client=\"t|gtx\"`. Setting `client=\"gtx\"` seems to work even with outdated token, see [this discussion](https://github.com/matheuss/google-translate-api/issues/79#issuecomment-425679193) for details\n- Fixed extraction of TKK ceed from current `https://translate.google.com` sources (via [@vitalets/google-translate-token](https://github.com/vitalets/google-translate-token))\n- Removed unsecure `unsafe-eval` dependency (See [#2](https://github.com/vitalets/google-translate-api/pull/2))\n- Added [daily CI tests](https://travis-ci.org/vitalets/google-translate-api/builds) to get notified if Google API changes\n- Added support for custom `tld` (especially to support `translate.google.cn`, see [#7](https://github.com/vitalets/google-translate-api/pull/7))\n- Added support for outputting pronunciation (see [#17](https://github.com/vitalets/google-translate-api/pull/17))\n- Added support for custom [got](https://github.com/sindresorhus/got) options. It allows to use proxy and bypass request limits (see [#25](https://github.com/vitalets/google-translate-api/pull/25))\n- Added support for language extensions from outside of the API (see [#18](https://github.com/vitalets/google-translate-api/pull/18))\n- Added TypeScript definitions (see [#50](https://github.com/vitalets/google-translate-api/pull/50), thanks to [@olavoparno](https://github.com/olavoparno))\n- Migrated to Google's latest batch-style RPC API (see [#60](https://github.com/vitalets/google-translate-api/pull/60), thanks to [@vkedwardli](https://github.com/vkedwardli))\n\n## Install \n\n```\nnpm install @vitalets/google-translate-api\n```\n\n## Usage\n\nFrom automatic language detection to English:\n\n```js\nconst translate = require('@vitalets/google-translate-api');\n\ntranslate('Ik spreek Engels', {to: 'en'}).then(res => {\n    console.log(res.text);\n    //=> I speak English\n    console.log(res.from.language.iso);\n    //=> nl\n}).catch(err => {\n    console.error(err);\n});\n```\n\n> Please note that maximum text length for single translation call is **5000** characters. \n> In case of longer text you should split it on chunks, see [#20](https://github.com/vitalets/google-translate-api/issues/20).\n\nFrom English to Dutch with a typo:\n\n```js\ntranslate('I spea Dutch!', {from: 'en', to: 'nl'}).then(res => {\n    console.log(res.text);\n    //=> Ik spreek Nederlands!\n    console.log(res.from.text.autoCorrected);\n    //=> true\n    console.log(res.from.text.value);\n    //=> I [speak] Dutch!\n    console.log(res.from.text.didYouMean);\n    //=> false\n}).catch(err => {\n    console.error(err);\n});\n```\n\nSometimes, the API will not use the auto corrected text in the translation:\n\n```js\ntranslate('I spea Dutch!', {from: 'en', to: 'nl'}).then(res => {\n    console.log(res);\n    console.log(res.text);\n    //=> Ik spea Nederlands!\n    console.log(res.from.text.autoCorrected);\n    //=> false\n    console.log(res.from.text.value);\n    //=> I [speak] Dutch!\n    console.log(res.from.text.didYouMean);\n    //=> true\n}).catch(err => {\n    console.error(err);\n});\n```\n\nYou can also add languages in the code and use them in the translation:\n\n``` js\ntranslate = require('google-translate-api');\ntranslate.languages['sr-Latn'] = 'Serbian Latin';\n\ntranslate('translator', {to: 'sr-Latn'}).then(res => ...);\n```\n\n## Proxy\nGoogle Translate has request limits. If too many requests are made, you can either end up with a 429 or a 503 error.\nYou can use **proxy** to bypass them:\n```js\nconst tunnel = require('tunnel');\ntranslate('Ik spreek Engels', {to: 'en'}, {\n    agent: tunnel.httpsOverHttp({\n    proxy: { \n      host: 'whateverhost',\n      proxyAuth: 'user:pass',\n      port: '8080',\n      headers: {\n        'User-Agent': 'Node'\n      }\n    }\n  }\n)}).then(res => {\n    // do something\n}).catch(err => {\n    console.error(err);\n});\n```\n\n## Does it work from web page context?\nNo. `https://translate.google.com` does not provide [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) http headers allowing access from other domains.\n\n## API\n\n### translate(text, [options], [gotOptions])\n\n#### text\n\nType: `string`\n\nThe text to be translated\n\n#### options\n\nType: `object`\n\n##### from\nType: `string` Default: `auto`\n\nThe `text` language. Must be `auto` or one of the codes/names (not case sensitive) contained in [languages.js](https://github.com/vitalets/google-translate-api/blob/master/languages.js)\n\n##### to\nType: `string` Default: `en`\n\nThe language in which the text should be translated. Must be one of the codes/names (case sensitive!) contained in [languages.js](https://github.com/vitalets/google-translate-api/blob/master/languages.js).\n\n##### raw\nType: `boolean` Default: `false`\n\nIf `true`, the returned object will have a `raw` property with the raw response (`string`) from Google Translate.\n\n##### client\nType: `string` Default: `\"t\"`\n\nQuery parameter `client` used in API calls. Can be `t|gtx`.\n\n##### tld\nType: `string` Default: `\"com\"`\n\nTLD for Google translate host to be used in API calls: `https://translate.google.{tld}`.\n\n#### gotOptions\nType: `object`\n\nThe got options: https://github.com/sindresorhus/got#options\n\n### Returns an `object`:\n- `text` *(string)* – The translated text.\n- `from` *(object)*\n  - `language` *(object)*\n    - `didYouMean` *(boolean)* - `true` if the API suggest a correction in the source language\n    - `iso` *(string)* - The [code of the language](https://github.com/vitalets/google-translate-api/blob/master/languages.js) that the API has recognized in the `text`\n  - `text` *(object)*\n    - `autoCorrected` *(boolean)* – `true` if the API has auto corrected the `text`\n    - `value` *(string)* – The auto corrected `text` or the `text` with suggested corrections\n    - `didYouMean` *(boolean)* – `true` if the API has suggested corrections to the `text`\n- `raw` *(string)* - If `options.raw` is true, the raw response from Google Translate servers. Otherwise, `''`.\n\nNote that `res.from.text` will only be returned if `from.text.autoCorrected` or `from.text.didYouMean` equals to `true`. In this case, it will have the corrections delimited with brackets (`[ ]`):\n\n```js\ntranslate('I spea Dutch').then(res => {\n    console.log(res.from.text.value);\n    //=> I [speak] Dutch\n}).catch(err => {\n    console.error(err);\n});\n```\nOtherwise, it will be an empty `string` (`''`).\n\n## License\n\nMIT © [Matheus Fernandes](http://matheus.top), forked and maintained by [Vitaliy Potapov](https://github.com/vitalets).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Matheus Fernandes – http://matheus.top – hi@matheus.top\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@vitalets/google-translate-api/-/google-translate-api-8.0.0.tgz#3dfbab1e051e4fcfe5ee97e1c5923a0ec0d106ae",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@vitalets/google-translate-api/-/google-translate-api-8.0.0.tgz",
    "hash": "3dfbab1e051e4fcfe5ee97e1c5923a0ec0d106ae",
    "integrity": "sha512-CHOi8DRgDAoLlFQy9pm1KHUauIk5ZXys3+Eh0aSYxzJSuxAE7Z2UL8+5MgNdl1oX7t/O7u+SwGhkhu6+U1bNcg==",
    "registry": "npm",
    "packageName": "@vitalets/google-translate-api",
    "cacheIntegrity": "sha512-CHOi8DRgDAoLlFQy9pm1KHUauIk5ZXys3+Eh0aSYxzJSuxAE7Z2UL8+5MgNdl1oX7t/O7u+SwGhkhu6+U1bNcg== sha1-PfurHgUeT8/l7pfhxZI6DsDRBq4="
  },
  "registry": "npm",
  "hash": "3dfbab1e051e4fcfe5ee97e1c5923a0ec0d106ae"
}