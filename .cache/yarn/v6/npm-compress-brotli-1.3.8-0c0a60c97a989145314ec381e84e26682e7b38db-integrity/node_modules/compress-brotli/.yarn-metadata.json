{
  "manifest": {
    "name": "compress-brotli",
    "description": "Simple cross Node.js inteface for using brotli compression",
    "homepage": "https://nicedoc.io/Kikobeats/compress-brotli",
    "version": "1.3.8",
    "main": "src/index.js",
    "author": {
      "name": "Kiko Beats",
      "email": "josefrancisco.verdu@gmail.com",
      "url": "https://kikobeats.com"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/Kikobeats/compress-brotli.git"
    },
    "bugs": {
      "url": "https://github.com/Kikobeats/compress-brotli/issues"
    },
    "keywords": [
      "api",
      "brotli",
      "compress",
      "compressed",
      "compression",
      "decode",
      "decompress",
      "decompression",
      "encode",
      "format",
      "zlib"
    ],
    "dependencies": {
      "@types/json-buffer": "~3.0.0",
      "json-buffer": "~3.0.1"
    },
    "devDependencies": {
      "@commitlint/cli": "latest",
      "@commitlint/config-conventional": "latest",
      "ava": "latest",
      "c8": "latest",
      "ci-publish": "latest",
      "conventional-github-releaser": "latest",
      "finepack": "latest",
      "git-authors-cli": "latest",
      "git-dirty": "latest",
      "nano-staged": "latest",
      "npm-check-updates": "latest",
      "prettier-standard": "latest",
      "simple-git-hooks": "latest",
      "sinon": "latest",
      "standard": "latest",
      "standard-markdown": "latest",
      "standard-version": "latest"
    },
    "engines": {
      "node": ">= 12"
    },
    "files": [
      "src"
    ],
    "scripts": {
      "clean": "rm -rf node_modules",
      "contributors": "(git-authors-cli && finepack && git add package.json && git commit -m 'build: contributors' --no-verify) || true",
      "lint": "standard-markdown README.md && standard",
      "postrelease": "npm run release:tags && npm run release:github && (ci-publish || npm publish --access=public)",
      "prerelease": "npm run update:check && npm run contributors",
      "pretest": "npm run lint",
      "release": "standard-version -a",
      "release:github": "conventional-github-releaser -p angular",
      "release:tags": "git push --follow-tags origin HEAD:master",
      "test": "c8 ava",
      "update": "ncu -u",
      "update:check": "ncu -- --error-level 2"
    },
    "license": "MIT",
    "commitlint": {
      "extends": [
        "@commitlint/config-conventional"
      ]
    },
    "nano-staged": {
      "*.js,!*.min.js,": [
        "prettier-standard"
      ],
      "*.md": [
        "standard-markdown"
      ],
      "package.json": [
        "finepack"
      ]
    },
    "simple-git-hooks": {
      "commit-msg": "npx commitlint --edit",
      "pre-commit": "npx nano-staged"
    },
    "types": "src/index.d.ts",
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-compress-brotli-1.3.8-0c0a60c97a989145314ec381e84e26682e7b38db-integrity/node_modules/compress-brotli/package.json",
    "readmeFilename": "README.md",
    "readme": "# compress-brotli\n\n![Last version](https://img.shields.io/github/tag/Kikobeats/compress-brotli.svg?style=flat-square)\n[![Coverage Status](https://img.shields.io/coveralls/Kikobeats/compress-brotli.svg?style=flat-square)](https://coveralls.io/github/Kikobeats/compress-brotli)\n[![NPM Status](https://img.shields.io/npm/dm/compress-brotli.svg?style=flat-square)](https://www.npmjs.org/package/compress-brotli)\n\n> Compress/Decompress using Brotli in a simple way.\n\n## Highlights\n\n- Handle edge cases (such as try to compress `undefined`).\n- JSON serialization/deserialization with Buffer support by default.\n- Easy tu customize (e.g., using [v8 serialization](https://nodejs.org/api/v8.html#v8_v8_serialize_value)).\n\n## Install\n\n```bash\n$ npm install compress-brotli --save\n```\n\n## Usage\n\n```js\nconst createCompress = require('compress-brotli')\n\n// It exposes compress/decompress methods\nconst { compress, decompress } = createCompress()\n```\n\nusing [v8 serialization](https://nodejs.org/api/v8.html#v8_v8_serialize_value):\n\n```js\nconst createCompress = require('compress-brotli')\nconst v8 = require('v8')\n\nconst { compress, decompress } = createCompress({\n  serialize: v8.serialize,\n  deserialize: v8.deserialize\n})\n```\ncustomizing compress options:\n```js\nconst createCompress = require('compress-brotli')\n\nconst {\n  constants: {\n    BROTLI_MODE_TEXT,\n    BROTLI_PARAM_MODE,\n    BROTLI_PARAM_QUALITY\n  }\n} = require('zlib')\n\n// Provide factory level default options\nconst { compress, decompress } = createCompress({\n  compressOptions: {\n    chunkSize: 1024,\n    parameters: {\n      [BROTLI_PARAM_MODE]: BROTLI_MODE_TEXT\n    }\n  },\n  decompressOptions: {\n    chunkSize: 1024,\n    parameters: {\n      [BROTLI_PARAM_MODE]: BROTLI_MODE_TEXT\n    }\n  }\n})\nconst data = 'whatever'\n\n// Override call level options (deep merge for parameters)\nconst compressed = compress(data, {\n  parameters: {\n    [BROTLI_PARAM_QUALITY]: 7\n  }\n})\ndecompress(compressed, {\n  chunkSize: 2048\n})\n```\n\n## API\n\n### compressBrotli([options])\n\n#### enable\n\nType: `boolean`<br>\nDefault: `false`\n\nIf pass disable, it will return a noop compress/decompress methods.\n\n#### serialize\n\nType: `function`<br>\nDefault: `JSONB.stringify`\n\nIt determines the serialize method to use before compress the data.\n\n#### deserialize\n\nType: `function`<br>\nDefault: `JSONB.parse`\n\nIt determines the deserialize method to use after decompress the data.\n\n#### compressOptions\n\nType: `zlib.BrotliOptions`<br>\nDefault: `{}` i.e. default *zlib.brotliCompress* options will be used\n\nIt  defines default options to be used in wrapped *zlib.brotliCompress* call\n\n#### decompressOptions\n\nType: `zlib.BrotliOptions`<br>\nDefault: `{}` i.e. default *zlib.brotliDecompress* options will be used\n\nIt defines default options to be used in wrapped *zlib.brotliDecompress* call\n\n## License\n\n**compress-brotli** © [Kiko Beats](https://kikobeats.com), released under the [MIT](https://github.com/Kikobeats/compress-brotli/blob/master/LICENSE.md) License.<br>\nAuthored and maintained by Kiko Beats with help from [contributors](https://github.com/Kikobeats/compress-brotli/contributors).\n\n> [kikobeats.com](https://kikobeats.com) · GitHub [Kiko Beats](https://github.com/Kikobeats) · Twitter [@Kikobeats](https://twitter.com/Kikobeats)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright © 2019 Kiko Beats <josefrancisco.verdu@gmail.com> (kikobeats.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/compress-brotli/-/compress-brotli-1.3.8.tgz#0c0a60c97a989145314ec381e84e26682e7b38db",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/compress-brotli/-/compress-brotli-1.3.8.tgz",
    "hash": "0c0a60c97a989145314ec381e84e26682e7b38db",
    "integrity": "sha512-lVcQsjhxhIXsuupfy9fmZUFtAIdBmXA7EGY6GBdgZ++qkM9zG4YFT8iU7FoBxzryNDMOpD1HIFHUSX4D87oqhQ==",
    "registry": "npm",
    "packageName": "compress-brotli",
    "cacheIntegrity": "sha512-lVcQsjhxhIXsuupfy9fmZUFtAIdBmXA7EGY6GBdgZ++qkM9zG4YFT8iU7FoBxzryNDMOpD1HIFHUSX4D87oqhQ== sha1-DApgyXqYkUUxTsOB6E4maC57ONs="
  },
  "registry": "npm",
  "hash": "0c0a60c97a989145314ec381e84e26682e7b38db"
}