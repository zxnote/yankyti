{
  "manifest": {
    "name": "crc32-stream",
    "version": "3.0.1",
    "description": "a streaming CRC32 checksumer",
    "homepage": "https://github.com/archiverjs/node-crc32-stream",
    "author": {
      "name": "Chris Talkington",
      "url": "http://christalkington.com/"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/archiverjs/node-crc32-stream.git"
    },
    "bugs": {
      "url": "https://github.com/archiverjs/node-crc32-stream/issues"
    },
    "license": "MIT",
    "main": "lib/index.js",
    "files": [
      "lib"
    ],
    "engines": {
      "node": ">= 6.9.0"
    },
    "scripts": {
      "test": "mocha --reporter dot"
    },
    "dependencies": {
      "crc": "^3.4.4",
      "readable-stream": "^3.4.0"
    },
    "devDependencies": {
      "chai": "^4.0.0",
      "mocha": "^6.2.0"
    },
    "keywords": [
      "crc32-stream",
      "crc32",
      "stream",
      "checksum"
    ],
    "publishConfig": {
      "registry": "https://registry.npmjs.org/"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-crc32-stream-3.0.1-cae6eeed003b0e44d739d279de5ae63b171b4e85-integrity/node_modules/crc32-stream/package.json",
    "readmeFilename": "README.md",
    "readme": "# CRC32 Stream [![Build Status](https://travis-ci.org/archiverjs/node-crc32-stream.svg?branch=master)](https://travis-ci.org/archiverjs/node-crc32-stream) [![Build status](https://ci.appveyor.com/api/projects/status/sy60s39cmyvd60i3/branch/master?svg=true)](https://ci.appveyor.com/project/ctalkington/node-crc32-stream/branch/master)\n\ncrc32-stream is a streaming CRC32 checksumer. It uses the [crc](https://www.npmjs.org/package/crc) module behind the scenes to reliably handle binary data and fancy character sets. Data is passed through untouched.\n\n### Install\n\n```bash\nnpm install crc32-stream --save\n```\n\nYou can also use `npm install https://github.com/archiverjs/node-crc32-stream/archive/master.tar.gz` to test upcoming versions.\n\n### Usage\n\n#### CRC32Stream\n\nInherits [Transform Stream](http://nodejs.org/api/stream.html#stream_class_stream_transform) options and methods.\n\n```js\nconst {CRC32Stream} = require('crc32-stream');\n\nconst source = fs.createReadStream('file.txt');\nconst checksum = new CRC32Stream();\n\nchecksum.on('end', function(err) {\n  // do something with checksum.digest() here\n});\n\n// either pipe it\nsource.pipe(checksum);\n\n// or write it\nchecksum.write('string');\nchecksum.end();\n```\n\n#### DeflateCRC32Stream\n\nInherits [zlib.DeflateRaw](http://nodejs.org/api/zlib.html#zlib_class_zlib_deflateraw) options and methods.\n\n```js\nconst {DeflateCRC32Stream} = require('crc32-stream');\n\nconst source = fs.createReadStream('file.txt');\nconst checksum = new DeflateCRC32Stream();\n\nchecksum.on('end', function(err) {\n  // do something with checksum.digest() here\n});\n\n// either pipe it\nsource.pipe(checksum);\n\n// or write it\nchecksum.write('string');\nchecksum.end();\n```\n\n### Instance API\n\n#### digest()\n\nReturns the checksum digest in unsigned form.\n\n#### hex()\n\nReturns the hexadecimal representation of the checksum digest. (ie E81722F0)\n\n#### size(compressed)\n\nReturns the raw size/length of passed-through data.\n\nIf `compressed` is `true`, it returns compressed length instead. (DeflateCRC32Stream)\n\n## Things of Interest\n\n- [Changelog](https://github.com/archiverjs/node-crc32-stream/releases)\n- [Contributing](https://github.com/archiverjs/node-crc32-stream/blob/master/CONTRIBUTING.md)\n- [MIT License](https://github.com/archiverjs/node-crc32-stream/blob/master/LICENSE-MIT)\n",
    "licenseText": "Copyright (c) 2014 Chris Talkington, contributors.\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/crc32-stream/-/crc32-stream-3.0.1.tgz#cae6eeed003b0e44d739d279de5ae63b171b4e85",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/crc32-stream/-/crc32-stream-3.0.1.tgz",
    "hash": "cae6eeed003b0e44d739d279de5ae63b171b4e85",
    "integrity": "sha512-mctvpXlbzsvK+6z8kJwSJ5crm7yBwrQMTybJzMw1O4lLGJqjlDCXY2Zw7KheiA6XBEcBmfLx1D88mjRGVJtY9w==",
    "registry": "npm",
    "packageName": "crc32-stream",
    "cacheIntegrity": "sha512-mctvpXlbzsvK+6z8kJwSJ5crm7yBwrQMTybJzMw1O4lLGJqjlDCXY2Zw7KheiA6XBEcBmfLx1D88mjRGVJtY9w== sha1-yubu7QA7DkTXOdJ53lrmOxcbToU="
  },
  "registry": "npm",
  "hash": "cae6eeed003b0e44d739d279de5ae63b171b4e85"
}