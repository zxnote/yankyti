{
  "manifest": {
    "name": "dasu",
    "version": "0.4.3",
    "description": "Consistent xhr API for both client and server (http.request)",
    "main": "dist/dasu.min.js",
    "files": [
      "dist/dasu.min.js"
    ],
    "scripts": {
      "watch": "miru -f dasu.js -e 'npm run build'",
      "build": "npm run build:js && npm run build:js:min",
      "build:js": "rollup -f umd dasu.js > dist/dasu.js",
      "build:js:min": "uglifyjs dist/dasu.js -cmo dist/dasu.min.js",
      "prepublish": "npm run lint && npm run build && npm test",
      "passlint": "passlint dist/dasu.js dist/dasu.min.js",
      "lint": "spacestandard --fix dasu.js",
      "test:only": "tape test/*test*.js",
      "test": "npm run lint && npm run build && tape test/*test*.js | faucet && npm run passlint"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/talmobi/dasu"
    },
    "author": {
      "name": "talmobi",
      "email": "talmo.christian@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/talmobi/dasu/issues"
    },
    "devDependencies": {
      "body-parser": "~1.19.0",
      "express": "~4.17.1",
      "faucet": "0.0.1",
      "miru": "~0.16.2",
      "passlint": "0.0.13",
      "rollup": "~0.33.1",
      "spacestandard": "~0.2.0",
      "tape": "~4.6.0",
      "uglify-js": "~2.7.5"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-dasu-0.4.3-892ecaa66ab69b1f21d9ca016699dbd0aec7e359-integrity/node_modules/dasu/package.json",
    "readmeFilename": "README.md",
    "readme": "[![npm](https://img.shields.io/npm/v/dasu.svg?maxAge=3600)](https://www.npmjs.com/package/dasu)\n[![npm](https://img.shields.io/npm/dm/dasu.svg?maxAge=3600)](https://www.npmjs.com/package/dasu)\n[![npm](https://img.shields.io/npm/l/dasu.svg?maxAge=3600)](https://www.npmjs.com/package/dasu)\n![macos](https://github.com/talmobi/dasu/workflows/macos/badge.svg)\n![windows](https://github.com/talmobi/dasu/workflows/windows/badge.svg)\n![ubuntu](https://github.com/talmobi/dasu/workflows/ubuntu/badge.svg)\n\n# 出す　ー　dasu\n## The same xhr API for both client and server\n\nSimple to use:\n```javascript\nvar dasu = require('dasu')\nvar req = dasu.req\n\n// same params as Node's require('http').request\nvar params = {\n  method: 'GET',\n  protocol: 'http',\n  hostname: 'uinames.com',\n  port: 80,\n  path: '/api/',\n}\n\nreq(params, function (err, res, data) {\n  console.log(res.statusCode)\n  console.log(res.headers)\n  var json = JSON.parse(data)\n  console.log(json)\n  // eg: {\"name\":\"Milica\",\"surname\":\"Maslo\",\"gender\":\"female\",\"region\":\"Slovakia\"}\n})\n\n\n// turn auto-follow redirects off\ndasu.follow = false\n\n// force mode 'node', 'browser', 'auto'\n// (useful with Electron etc)\ndasu.mode = 'auto' // uses window.XMLHttpRequest if available\n```\n\n## Test in browser\nhttps://runkit.com/talmobi/runkit-npm-dasu\n\n## About\nUsing XMLHttpRequest or Node's http libraries under the hood, **dasu** aims to streamline your basic xhr for both contexts. It provides the familiar structure to Node's http library (http://devdocs.io/node/http#http_http_request_options_callback)\n\n\n## Why\nTest your client side request/fetch/xhr logic on the server side with the same api you're using on the client.\n\n## Alternatives\nhttps://github.com/visionmedia/superagent\n\n\n## Install\nfrom npm\n```\nnpm install --save dasu\n```\n\nfrom source\n```\ngit clone https://github.com/talmobi/dasu\ncd dasu\nnpm install\n```\n\n\n## Test\n```\ngit clone https://github.com/talmobi/dasu\ncd dasu\nnpm install\nnpm test\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/dasu/-/dasu-0.4.3.tgz#892ecaa66ab69b1f21d9ca016699dbd0aec7e359",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/dasu/-/dasu-0.4.3.tgz",
    "hash": "892ecaa66ab69b1f21d9ca016699dbd0aec7e359",
    "integrity": "sha512-AFwspl5k7V8MW8H7tyIGJ0gtOauUg7JC+DgiRFUIXvPNNDFXTMtvnCkZY0macN6JLGqBjNP38WVnQN7Iv3RSlg==",
    "registry": "npm",
    "packageName": "dasu",
    "cacheIntegrity": "sha512-AFwspl5k7V8MW8H7tyIGJ0gtOauUg7JC+DgiRFUIXvPNNDFXTMtvnCkZY0macN6JLGqBjNP38WVnQN7Iv3RSlg== sha1-iS7Kpmq2mx8h2coBZpnb0K7H41k="
  },
  "registry": "npm",
  "hash": "892ecaa66ab69b1f21d9ca016699dbd0aec7e359"
}