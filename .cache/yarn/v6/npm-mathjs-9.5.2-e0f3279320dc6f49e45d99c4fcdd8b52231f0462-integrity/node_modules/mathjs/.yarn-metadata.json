{
  "manifest": {
    "name": "mathjs",
    "version": "9.5.2",
    "description": "Math.js is an extensive math library for JavaScript and Node.js. It features a flexible expression parser with support for symbolic computation, comes with a large set of built-in functions and constants, and offers an integrated solution to work with different data types like numbers, big numbers, complex numbers, fractions, units, and matrices.",
    "author": {
      "name": "Jos de Jong",
      "email": "wjosdejong@gmail.com",
      "url": "https://github.com/josdejong"
    },
    "homepage": "https://mathjs.org/",
    "repository": {
      "type": "git",
      "url": "https://github.com/josdejong/mathjs.git"
    },
    "license": "Apache-2.0",
    "keywords": [
      "math",
      "mathematics",
      "functions",
      "numeric",
      "algebra",
      "parser",
      "expression",
      "number",
      "bignumber",
      "complex",
      "fraction",
      "matrix",
      "unit"
    ],
    "dependencies": {
      "@babel/runtime": "^7.15.4",
      "complex.js": "^2.0.15",
      "decimal.js": "^10.3.1",
      "escape-latex": "^1.2.0",
      "fraction.js": "^4.1.1",
      "javascript-natural-sort": "^0.7.1",
      "seedrandom": "^3.0.5",
      "tiny-emitter": "^2.1.0",
      "typed-function": "^2.0.0"
    },
    "devDependencies": {
      "@babel/core": "7.15.5",
      "@babel/plugin-transform-object-assign": "7.14.5",
      "@babel/plugin-transform-runtime": "7.15.0",
      "@babel/preset-env": "7.15.6",
      "@babel/register": "7.15.3",
      "babel-loader": "8.2.2",
      "benchmark": "2.1.4",
      "codecov": "3.8.3",
      "core-js": "3.17.3",
      "del": "6.0.0",
      "dtslint": "4.1.6",
      "expr-eval": "2.0.2",
      "fancy-log": "1.3.3",
      "glob": "7.1.7",
      "gulp": "4.0.2",
      "gulp-babel": "8.0.0",
      "handlebars": "4.7.7",
      "istanbul": "0.4.5",
      "jsep": "1.0.3",
      "karma": "6.3.4",
      "karma-browserstack-launcher": "1.6.0",
      "karma-firefox-launcher": "2.1.1",
      "karma-mocha": "2.0.1",
      "karma-mocha-reporter": "2.2.5",
      "karma-webpack": "4.0.2",
      "math-expression-evaluator": "1.3.8",
      "mkdirp": "1.0.4",
      "mocha": "8.4.0",
      "ndarray": "1.0.19",
      "ndarray-determinant": "1.0.0",
      "ndarray-gemm": "1.0.0",
      "ndarray-ops": "1.2.2",
      "ndarray-pack": "1.2.1",
      "numericjs": "1.2.6",
      "nyc": "15.1.0",
      "pad-right": "0.2.2",
      "standard": "16.0.3",
      "sylvester": "0.0.21",
      "typescript": "4.4.3",
      "webpack": "4.46.0",
      "zeros": "1.0.0"
    },
    "type": "module",
    "main": "./lib/cjs",
    "types": "./types/index.d.ts",
    "module": "./lib/esm",
    "unpkg": "./lib/browser/math.js",
    "jsdelivr": "./lib/browser/math.js",
    "exports": {
      ".": {
        "import": "./lib/esm/index.js",
        "require": "./lib/cjs/index.js"
      },
      "./number": {
        "import": "./lib/esm/number.js",
        "require": "./lib/cjs/number.js"
      },
      "./lib/esm/number": {
        "import": "./lib/esm/number.js",
        "require": "./lib/cjs/number.js"
      },
      "./package.json": "./package.json",
      "./lib/browser/math.js": "./lib/browser/math.js",
      "./lib/browser/math.js.map": "./lib/browser/math.js.map",
      "./dist/math.js": "./dist/math.js",
      "./dist/math.min.js": "./dist/math.min.js",
      "./main/es5/index.js": "./main/es5/index.js",
      "./main/es5/number.js": "./main/es5/number.js",
      "./main/esm/index.js": "./main/esm/index.js",
      "./main/esm/number.js": "./main/esm/number.js",
      "./number.js": "./number.cjs"
    },
    "files": [
      "bin",
      "dist",
      "docs",
      "lib",
      "examples",
      "main",
      "types",
      "number.cjs",
      "LICENSE",
      "NOTICE",
      "README.md",
      "HISTORY.md",
      "CONTRIBUTING.md"
    ],
    "scripts": {
      "build": "gulp --gulpfile gulpfile.cjs",
      "build-and-test": "npm run build && npm run test:all && npm run lint",
      "build:clean": "gulp --gulpfile gulpfile.cjs clean",
      "build:docs": "gulp --gulpfile gulpfile.cjs docs",
      "compile": "gulp --gulpfile gulpfile.cjs compile",
      "watch": "gulp --gulpfile gulpfile.cjs watch",
      "lint": "standard --env=mocha --env=worker",
      "validate:ascii": "gulp --gulpfile gulpfile.cjs validate:ascii",
      "test": "npm run test:src && npm run lint",
      "test:src": "mocha test/unit-tests",
      "test:generated": "mocha test/generated-code-tests",
      "test:node": "mocha test/node-tests/*.test.js test/node-tests/**/*.test.js",
      "test:all": "npm run test:src && npm run test:generated && npm run test:node",
      "test:browser": "karma start test/browser-test-config/local-karma.js",
      "test:browserstack": "karma start test/browser-test-config/browserstack-karma.js",
      "coverage": "nyc --reporter=lcov --reporter=text-summary mocha test/unit-tests && echo \"\nDetailed coverage report is available at ./coverage/lcov-report/index.html\"",
      "prepublishOnly": "npm run test:all && npm run lint",
      "prepare": "npm run build",
      "update-authors": "node ./tools/update-authors.js"
    },
    "bin": {
      "mathjs": "bin/cli.js"
    },
    "engines": {
      "node": ">= 12"
    },
    "bugs": {
      "url": "https://github.com/josdejong/mathjs/issues"
    },
    "sideEffects": false,
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-mathjs-9.5.2-e0f3279320dc6f49e45d99c4fcdd8b52231f0462-integrity/node_modules/mathjs/package.json",
    "readmeFilename": "README.md",
    "readme": "![math.js](https://raw.github.com/josdejong/mathjs/master/misc/img/mathjs.png)\n\n[https://mathjs.org](https://mathjs.org)\n\nMath.js is an extensive math library for JavaScript and Node.js. It features a flexible expression parser with support for symbolic computation, comes with a large set of built-in functions and constants, and offers an integrated solution to work with different data types like numbers, big numbers, complex numbers, fractions, units, and matrices. Powerful and easy to use.\n\n[![Version](https://img.shields.io/npm/v/mathjs.svg)](https://www.npmjs.com/package/mathjs)\n[![Downloads](https://img.shields.io/npm/dm/mathjs.svg)](https://www.npmjs.com/package/mathjs)\n[![Build Status](https://github.com/josdejong/mathjs/workflows/Node.js%20CI/badge.svg)](https://github.com/josdejong/mathjs/actions)\n[![Maintenance](https://img.shields.io/maintenance/yes/2021.svg)](https://github.com/josdejong/mathjs/graphs/commit-activity)\n[![License](https://img.shields.io/github/license/josdejong/mathjs.svg)](https://github.com/josdejong/mathjs/blob/master/LICENSE)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjosdejong%2Fmathjs.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fjosdejong%2Fmathjs?ref=badge_shield)\n[![Codecov](https://codecov.io/gh/josdejong/mathjs/branch/develop/graph/badge.svg)](https://codecov.io/gh/josdejong/mathjs)\n[![Github Sponsor](https://camo.githubusercontent.com/7d9333b097b2f54a8957d126ab82937811489c9b75c3850f609985cf94cd29fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302d53706f6e736f722532306d652532306f6e2532304769744875622d6f72616e6765)](https://github.com/sponsors/josdejong)\n\n## Features\n\n- Supports numbers, big numbers, complex numbers, fractions, units, strings, arrays, and matrices.\n- Is compatible with JavaScript's built-in Math library.\n- Contains a flexible expression parser.\n- Does symbolic computation.\n- Comes with a large set of built-in functions and constants.\n- Can be used as a command line application as well.\n- Runs on any JavaScript engine.\n- Is easily extensible.\n- Open source.\n\n## Usage\n\nMath.js can be used in both node.js and in the browser.\n\nInstall math.js using [npm](https://www.npmjs.com/package/mathjs):\n\n    npm install mathjs\n\nOr download mathjs via one of the CDN's listed on the downloads page:\n\n&nbsp;&nbsp;&nbsp;&nbsp;[https://mathjs.org/download.html](https://mathjs.org/download.html#download)\n\nMath.js can be used similar to JavaScript's built-in Math library. Besides that,\nmath.js can evaluate\n[expressions](https://mathjs.org/docs/expressions/index.html)\nand supports\n[chained operations](https://mathjs.org/docs/core/chaining.html).\n\n```js\nimport {\n  atan2, chain, derivative, e, evaluate, log, pi, pow, round, sqrt\n} from 'mathjs'\n\n// functions and constants\nround(e, 3)                    // 2.718\natan2(3, -3) / pi              // 0.75\nlog(10000, 10)                 // 4\nsqrt(-4)                       // 2i\npow([[-1, 2], [3, 1]], 2)      // [[7, 0], [0, 7]]\nderivative('x^2 + x', 'x')     // 2 * x + 1\n\n// expressions\nevaluate('12 / (2.3 + 0.7)')   // 4\nevaluate('12.7 cm to inch')    // 5 inch\nevaluate('sin(45 deg) ^ 2')    // 0.5\nevaluate('9 / 3 + 2i')         // 3 + 2i\nevaluate('det([-1, 2; 3, 1])') // -7\n\n// chaining\nchain(3)\n    .add(4)\n    .multiply(2)\n    .done()  // 14\n```\n\nSee the [Getting Started](https://mathjs.org/docs/getting_started.html) for a more detailed tutorial.\n\n\n## Browser support\n\nMath.js works on any ES5 compatible JavaScript engine: node.js, Chrome, Firefox, Safari, Edge, and IE11.\n\n\n## Documentation\n\n- [Getting Started](https://mathjs.org/docs/getting_started.html)\n- [Examples](https://mathjs.org/examples/index.html)\n- [Overview](https://mathjs.org/docs/index.html)\n- [History](https://mathjs.org/history.html)\n\n\n## Build\n\nFirst clone the project from github:\n\n    git clone git://github.com/josdejong/mathjs.git\n    cd mathjs\n\nInstall the project dependencies:\n\n    npm install\n\nThen, the project can be build by executing the build script via npm:\n\n    npm run build\n\nThis will build ESM output, CommonJS output, and the bundle math.js\nfrom the source files and put them in the folder lib.\n\n\n## Develop\n\nWhen developing new features for mathjs, it is good to be aware of the following background information.\n\n### Code\n\nThe code of `mathjs` is written in ES modules, and requires all files to have a real, relative path, meaning the files must have a `*.js` extension. Please configure adding file extensions on auto import in your IDE.\n\n### Architecture\n\nWhat mathjs tries to achieve is to offer an environment where you can do calculations with mixed data types,\nlike multiplying a regular `number` with a `Complex` number or a `BigNumber`, and work with all of those in matrices.\nMathjs also allows to add a new data type, like say `BigInt`, with little effort.\n\nThe solution that mathjs uses has two main ingredients:\n\n- **Typed functions**. All functions are created using [`typed-function`](https://github.com/josdejong/typed-function/). This makes it easier to (dynamically) create and extend a single function with new data types, automatically do type conversions on function inputs, etc. So, if you create function multiply for two `number`s, you can extend it with support for multiplying two `BigInts`. If you define a conversion from `BigInt` to `number`, the typed-function will automatically allow you to multiply a `BigInt` with a `number`.\n\n- **Dependency injection**. When we have a function `multiply` with support for `BigInt`, thanks to the dependency injection, other functions using `multiply` under the hood, like `prod`, will automatically support `BigInt` too. This also works the other way around: if you don't need the heavyweight `multiply` (which supports BigNumbers, matrices, etc), and you just need a plain and simple number support, you can use a lightweight implementation of `multiply` just for numbers, and inject that in `prod` and other functions.\n\nAt the lowest level, mathjs has immutable factory functions which create immutable functions. The core function `math.create(...)` creates a new instance having functions created from all passed factory functions. A mathjs instance is a collection of created functions. It contains a function like `math.import` to allow extending the instance with new functions, which can then be used in the expression parser.\n\n### Build scripts\n\nThe build script currently generates two types of output:\n\n- **any**, generate entry points to create full versions of all functions\n- **number**: generating and entry points to create lightweight functions just supporting `number`\n\nFor each function, an object is generated containing the factory functions of all dependencies of the function. This allows to just load a specific set of functions, and not load or bundle any other functionality. So for example, to just create function `add` you can do `math.create(addDependencies)`.\n\n\n## Test\n\nTo execute tests for the library, install the project dependencies once:\n\n    npm install\n\nThen, the tests can be executed:\n\n    npm test\n\nAdditionally, the tests can be run on FireFox using [headless mode](https://developer.mozilla.org/en-US/Firefox/Headless_mode):\n\n    npm run test:browser\n\nTo run the tests remotely on BrowserStack, first set the environment variables `BROWSER_STACK_USERNAME` and `BROWSER_STACK_ACCESS_KEY` with your username and access key and then execute:\n\n    npm run test:browserstack\n\nTo test code coverage of the tests:\n\n    npm run coverage\n\nTo see the coverage results, open the generated report in your browser:\n\n    ./coverage/lcov-report/index.html\n\n\n### Continuous integration testing\n\nContinuous integration tests are run on [Github Actions](https://github.com/josdejong/mathjs/actions) and [BrowserStack](https://www.browserstack.com) every time a commit is pushed to github. Github Actions runs the tests for different versions of node.js, and BrowserStack runs the tests on all major browsers.\n\n[![BrowserStack](https://raw.github.com/josdejong/mathjs/master/misc/browserstack.png)](https://www.browserstack.com)\n\nThanks Github Actions and BrowserStack for the generous free hosting of this open source project!\n\n## License\n\nCopyright (C) 2013-2021 Jos de Jong <wjosdejong@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
    "licenseText": "                               Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n",
    "noticeText": "math.js\nhttps://github.com/josdejong/mathjs\n\nCopyright (C) 2013-2021 Jos de Jong <wjosdejong@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/mathjs/-/mathjs-9.5.2.tgz#e0f3279320dc6f49e45d99c4fcdd8b52231f0462",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/mathjs/-/mathjs-9.5.2.tgz",
    "hash": "e0f3279320dc6f49e45d99c4fcdd8b52231f0462",
    "integrity": "sha512-c0erTq0GP503/Ch2OtDOAn50GIOsuxTMjmE00NI/vKJFSWrDaQHRjx6ai+16xYv70yBSnnpUgHZGNf9FR9IwmA==",
    "registry": "npm",
    "packageName": "mathjs",
    "cacheIntegrity": "sha512-c0erTq0GP503/Ch2OtDOAn50GIOsuxTMjmE00NI/vKJFSWrDaQHRjx6ai+16xYv70yBSnnpUgHZGNf9FR9IwmA== sha1-4PMnkyDcb0nkXZnE/N2LUiMfBGI="
  },
  "registry": "npm",
  "hash": "e0f3279320dc6f49e45d99c4fcdd8b52231f0462"
}