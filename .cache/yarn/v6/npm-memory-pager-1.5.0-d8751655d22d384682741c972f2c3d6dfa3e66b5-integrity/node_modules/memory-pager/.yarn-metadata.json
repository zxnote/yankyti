{
  "manifest": {
    "name": "memory-pager",
    "version": "1.5.0",
    "description": "Access memory using small fixed sized buffers",
    "main": "index.js",
    "dependencies": {},
    "devDependencies": {
      "standard": "^9.0.0",
      "tape": "^4.6.3"
    },
    "scripts": {
      "test": "standard && tape test.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/mafintosh/memory-pager.git"
    },
    "author": {
      "name": "Mathias Buus",
      "url": "@mafintosh"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/mafintosh/memory-pager/issues"
    },
    "homepage": "https://github.com/mafintosh/memory-pager",
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-memory-pager-1.5.0-d8751655d22d384682741c972f2c3d6dfa3e66b5-integrity/node_modules/memory-pager/package.json",
    "readmeFilename": "README.md",
    "readme": "# memory-pager\n\nAccess memory using small fixed sized buffers instead of allocating a huge buffer.\nUseful if you are implementing sparse data structures (such as large bitfield).\n\n![travis](https://travis-ci.org/mafintosh/memory-pager.svg?branch=master)\n\n```\nnpm install memory-pager\n```\n\n## Usage\n\n``` js\nvar pager = require('paged-memory')\n\nvar pages = pager(1024) // use 1kb per page\n\nvar page = pages.get(10) // get page #10\n\nconsole.log(page.offset) // 10240\nconsole.log(page.buffer) // a blank 1kb buffer\n```\n\n## API\n\n#### `var pages = pager(pageSize)`\n\nCreate a new pager. `pageSize` defaults to `1024`.\n\n#### `var page = pages.get(pageNumber, [noAllocate])`\n\nGet a page. The page will be allocated at first access.\n\nOptionally you can set the `noAllocate` flag which will make the\nmethod return undefined if no page has been allocated already\n\nA page looks like this\n\n``` js\n{\n  offset: byteOffset,\n  buffer: bufferWithPageSize\n}\n```\n\n#### `pages.set(pageNumber, buffer)`\n\nExplicitly set the buffer for a page.\n\n#### `pages.updated(page)`\n\nMark a page as updated.\n\n#### `pages.lastUpdate()`\n\nGet the last page that was updated.\n\n#### `var buf = pages.toBuffer()`\n\nConcat all pages allocated pages into a single buffer\n\n## License\n\nMIT\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Mathias Buus\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/memory-pager/-/memory-pager-1.5.0.tgz#d8751655d22d384682741c972f2c3d6dfa3e66b5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/memory-pager/-/memory-pager-1.5.0.tgz",
    "hash": "d8751655d22d384682741c972f2c3d6dfa3e66b5",
    "integrity": "sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==",
    "registry": "npm",
    "packageName": "memory-pager",
    "cacheIntegrity": "sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg== sha1-2HUWVdItOEaCdByXLyw9bfo+ZrU="
  },
  "registry": "npm",
  "hash": "d8751655d22d384682741c972f2c3d6dfa3e66b5"
}