{
  "manifest": {
    "name": "mongodb",
    "version": "4.8.1",
    "description": "The official MongoDB driver for Node.js",
    "main": "lib/index.js",
    "files": [
      "lib",
      "src",
      "etc/prepare.js",
      "mongodb.d.ts",
      "tsconfig.json"
    ],
    "types": "mongodb.d.ts",
    "repository": {
      "type": "git",
      "url": "git@github.com:mongodb/node-mongodb-native.git"
    },
    "keywords": [
      "mongodb",
      "driver",
      "official"
    ],
    "author": {
      "name": "The MongoDB NodeJS Team",
      "email": "dbx-node@mongodb.com"
    },
    "dependencies": {
      "bson": "^4.6.5",
      "denque": "^2.0.1",
      "mongodb-connection-string-url": "^2.5.2",
      "socks": "^2.6.2"
    },
    "devDependencies": {
      "@iarna/toml": "^2.2.5",
      "@istanbuljs/nyc-config-typescript": "^1.0.2",
      "@microsoft/api-extractor": "^7.25.0",
      "@microsoft/tsdoc-config": "^0.16.1",
      "@mongodb-js/zstd": "^1.0.0",
      "@types/chai": "^4.3.1",
      "@types/chai-subset": "^1.3.3",
      "@types/express": "^4.17.13",
      "@types/kerberos": "^1.1.1",
      "@types/mocha": "^9.1.1",
      "@types/node": "^17.0.42",
      "@types/saslprep": "^1.0.1",
      "@types/semver": "^7.3.9",
      "@types/sinon": "^10.0.11",
      "@types/sinon-chai": "^3.2.8",
      "@types/whatwg-url": "^8.2.1",
      "@typescript-eslint/eslint-plugin": "^5.28.0",
      "@typescript-eslint/parser": "^5.28.0",
      "bluebird": "^3.7.2",
      "chai": "^4.3.6",
      "chai-subset": "^1.6.0",
      "chalk": "^4.1.2",
      "eslint": "^8.17.0",
      "eslint-config-prettier": "^8.5.0",
      "eslint-plugin-import": "^2.26.0",
      "eslint-plugin-prettier": "^4.0.0",
      "eslint-plugin-simple-import-sort": "^7.0.0",
      "eslint-plugin-tsdoc": "^0.2.16",
      "express": "^4.18.1",
      "js-yaml": "^4.1.0",
      "mocha": "^9.2.2",
      "mocha-sinon": "^2.1.2",
      "nyc": "^15.1.0",
      "prettier": "^2.7.0",
      "rimraf": "^3.0.2",
      "semver": "^7.3.7",
      "sinon": "^13.0.1",
      "sinon-chai": "^3.7.0",
      "source-map-support": "^0.5.21",
      "standard-version": "^9.5.0",
      "ts-node": "^10.8.1",
      "tsd": "^0.21.0",
      "typescript": "^4.7.3",
      "typescript-cached-transpile": "^0.0.6",
      "xml2js": "^0.4.23",
      "yargs": "^17.5.1"
    },
    "license": "Apache-2.0",
    "engines": {
      "node": ">=12.9.0"
    },
    "bugs": {
      "url": "https://jira.mongodb.org/projects/NODE/issues/"
    },
    "homepage": "https://github.com/mongodb/node-mongodb-native",
    "optionalDependencies": {
      "saslprep": "^1.0.3"
    },
    "scripts": {
      "build:evergreen": "node .evergreen/generate_evergreen_tasks.js",
      "build:ts": "node ./node_modules/typescript/bin/tsc",
      "build:dts": "npm run build:ts && api-extractor run && rimraf 'lib/**/*.d.ts*'",
      "build:docs": "./etc/docs/build.ts",
      "build:typedoc": "typedoc",
      "check:bench": "node test/benchmarks/driverBench",
      "check:coverage": "nyc npm run test:all",
      "check:integration-coverage": "nyc npm run check:test",
      "check:lint": "npm run build:dts && npm run check:dts && npm run check:eslint && npm run check:tsd",
      "check:eslint": "eslint -v && eslint --max-warnings=0 --ext '.js,.ts' src test",
      "check:tsd": "tsd --version && tsd",
      "check:dts": "node ./node_modules/typescript/bin/tsc --noEmit mongodb.d.ts && tsd",
      "check:test": "mocha --config test/mocha_mongodb.json test/integration",
      "check:unit": "mocha test/unit",
      "check:ts": "node ./node_modules/typescript/bin/tsc -v && node ./node_modules/typescript/bin/tsc --noEmit",
      "check:atlas": "mocha --config test/manual/mocharc.json test/manual/atlas_connectivity.test.js",
      "check:adl": "mocha --config test/mocha_mongodb.json test/manual/atlas-data-lake-testing",
      "check:aws": "mocha --config test/mocha_mongodb.json test/integration/auth/mongodb_aws.test.ts",
      "check:ocsp": "mocha --config test/manual/mocharc.json test/manual/ocsp_support.test.js",
      "check:kerberos": "mocha --config test/manual/mocharc.json test/manual/kerberos.test.js",
      "check:tls": "mocha --config test/manual/mocharc.json test/manual/tls_support.test.js",
      "check:ldap": "mocha --config test/manual/mocharc.json test/manual/ldap.test.js",
      "check:socks5": "mocha --config test/manual/mocharc.json test/manual/socks5.test.ts",
      "check:csfle": "mocha --config test/mocha_mongodb.json test/integration/client-side-encryption",
      "check:snappy": "mocha test/unit/assorted/snappy.test.js",
      "fix:eslint": "npm run check:eslint -- --fix",
      "prepare": "node etc/prepare.js",
      "preview:docs": "ts-node etc/docs/preview.ts",
      "release": "standard-version -a -i HISTORY.md",
      "test": "npm run check:lint && npm run test:all",
      "test:all": "npm run check:unit && npm run check:test",
      "update:docs": "npm run build:docs -- --yes"
    },
    "tsd": {
      "directory": "test/types",
      "compilerOptions": {
        "strict": true,
        "target": "esnext",
        "module": "commonjs",
        "moduleResolution": "node"
      }
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-mongodb-4.8.1-596de88ff4519128266d9254dbe5b781c4005796-integrity/node_modules/mongodb/package.json",
    "readmeFilename": "README.md",
    "readme": "# MongoDB NodeJS Driver\n\nThe official [MongoDB](https://www.mongodb.com/) driver for Node.js.\n\n**Upgrading to version 4? Take a look at our [upgrade guide here](https://github.com/mongodb/node-mongodb-native/blob/HEAD/etc/notes/CHANGES_4.0.0.md)!**\n\n## Quick Links\n\n| what          | where                                                                                                   |\n| ------------- | ------------------------------------------------------------------------------------------------------- |\n| documentation | [docs.mongodb.com/drivers/node](https://docs.mongodb.com/drivers/node)                                  |\n| api-doc       | [mongodb.github.io/node-mongodb-native/](https://mongodb.github.io/node-mongodb-native/)                |\n| npm package   | [www.npmjs.com/package/mongodb](https://www.npmjs.com/package/mongodb)                                  |\n| source        | [github.com/mongodb/node-mongodb-native](https://github.com/mongodb/node-mongodb-native)                |\n| mongodb       | [www.mongodb.com](https://www.mongodb.com)                                                              |\n| changelog     | [HISTORY.md](https://github.com/mongodb/node-mongodb-native/blob/HEAD/HISTORY.md)                       |\n| upgrade to v4 | [etc/notes/CHANGES_4.0.0.md](https://github.com/mongodb/node-mongodb-native/blob/HEAD/etc/notes/CHANGES_4.0.0.md) |\n| contributing  | [CONTRIBUTING.md](https://github.com/mongodb/node-mongodb-native/blob/HEAD/CONTRIBUTING.md)             |\n\n### Bugs / Feature Requests\n\nThink youâ€™ve found a bug? Want to see a new feature in `node-mongodb-native`? Please open a\ncase in our issue management tool, JIRA:\n\n- Create an account and login [jira.mongodb.org](https://jira.mongodb.org).\n- Navigate to the NODE project [jira.mongodb.org/browse/NODE](https://jira.mongodb.org/browse/NODE).\n- Click **Create Issue** - Please provide as much information as possible about the issue type and how to reproduce it.\n\nBug reports in JIRA for all driver projects (i.e. NODE, PYTHON, CSHARP, JAVA) and the\nCore Server (i.e. SERVER) project are **public**.\n\n### Support / Feedback\n\nFor issues with, questions about, or feedback for the Node.js driver, please look into our [support channels](https://docs.mongodb.com/manual/support). Please do not email any of the driver developers directly with issues or questions - you're more likely to get an answer on the [MongoDB Community Forums](https://community.mongodb.com/tags/c/drivers-odms-connectors/7/node-js-driver).\n\n### Change Log\n\nChange history can be found in [`HISTORY.md`](https://github.com/mongodb/node-mongodb-native/blob/HEAD/HISTORY.md).\n\n### Compatibility\n\nFor version compatibility matrices, please refer to the following links:\n\n- [MongoDB](https://docs.mongodb.com/drivers/node/current/compatibility/#mongodb-compatibility)\n- [NodeJS](https://docs.mongodb.com/drivers/node/current/compatibility/#language-compatibility)\n\n#### Typescript Version\n\nWe recommend using the latest version of typescript, however we currently ensure the driver's public types compile against `typescript@4.1.6`.\nThis is the lowest typescript version guaranteed to work with our driver: older versions may or may not work - use at your own risk.\nSince typescript [does not restrict breaking changes to major versions](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes) we consider this support best effort.\nIf you run into any unexpected compiler failures against our supported TypeScript versions please let us know by filing an issue on our [JIRA](https://jira.mongodb.org/browse/NODE).\n\n## Installation\n\nThe recommended way to get started using the Node.js 4.x driver is by using the `npm` (Node Package Manager) to install the dependency in your project.\n\nAfter you've created your own project using `npm init`, you can run:\n\n```bash\nnpm install mongodb\n# or ...\nyarn add mongodb\n```\n\nThis will download the MongoDB driver and add a dependency entry in your `package.json` file.\n\nIf you are a Typescript user, you will need the Node.js type definitions to use the driver's definitions:\n\n```sh\nnpm install -D @types/node\n```\n\n## Troubleshooting\n\nThe MongoDB driver depends on several other packages. These are:\n\n- [bson](https://github.com/mongodb/js-bson)\n- [bson-ext](https://github.com/mongodb-js/bson-ext)\n- [kerberos](https://github.com/mongodb-js/kerberos)\n- [mongodb-client-encryption](https://github.com/mongodb/libmongocrypt#readme)\n\nSome of these packages include native C++ extensions. Consult the [trouble shooting guide here](https://github.com/mongodb/node-mongodb-native/blob/HEAD/etc/notes/native-extensions.md) if you run into issues.\n\n## Quick Start\n\nThis guide will show you how to set up a simple application using Node.js and MongoDB. Its scope is only how to set up the driver and perform the simple CRUD operations. For more in-depth coverage, see the [official documentation](https://docs.mongodb.com/drivers/node/).\n\n### Create the `package.json` file\n\nFirst, create a directory where your application will live.\n\n```bash\nmkdir myProject\ncd myProject\n```\n\nEnter the following command and answer the questions to create the initial structure for your new project:\n\n```bash\nnpm init -y\n```\n\nNext, install the driver as a dependency.\n\n```bash\nnpm install mongodb\n```\n\n### Start a MongoDB Server\n\nFor complete MongoDB installation instructions, see [the manual](https://docs.mongodb.org/manual/installation/).\n\n1. Download the right MongoDB version from [MongoDB](https://www.mongodb.org/downloads)\n2. Create a database directory (in this case under **/data**).\n3. Install and start a `mongod` process.\n\n```bash\nmongod --dbpath=/data\n```\n\nYou should see the **mongod** process start up and print some status information.\n\n### Connect to MongoDB\n\nCreate a new **app.js** file and add the following code to try out some basic CRUD\noperations using the MongoDB driver.\n\nAdd code to connect to the server and the database **myProject**:\n\n> **NOTE:** All the examples below use async/await syntax.\n>\n> However, all async API calls support an optional callback as the final argument,\n> if a callback is provided a Promise will not be returned.\n\n```js\nconst { MongoClient } = require('mongodb');\n// or as an es module:\n// import { MongoClient } from 'mongodb'\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\nconst client = new MongoClient(url);\n\n// Database Name\nconst dbName = 'myProject';\n\nasync function main() {\n  // Use connect method to connect to the server\n  await client.connect();\n  console.log('Connected successfully to server');\n  const db = client.db(dbName);\n  const collection = db.collection('documents');\n\n  // the following code examples can be pasted here...\n\n  return 'done.';\n}\n\nmain()\n  .then(console.log)\n  .catch(console.error)\n  .finally(() => client.close());\n```\n\nRun your app from the command line with:\n\n```bash\nnode app.js\n```\n\nThe application should print **Connected successfully to server** to the console.\n\n### Insert a Document\n\nAdd to **app.js** the following function which uses the **insertMany**\nmethod to add three documents to the **documents** collection.\n\n```js\nconst insertResult = await collection.insertMany([{ a: 1 }, { a: 2 }, { a: 3 }]);\nconsole.log('Inserted documents =>', insertResult);\n```\n\nThe **insertMany** command returns an object with information about the insert operations.\n\n### Find All Documents\n\nAdd a query that returns all the documents.\n\n```js\nconst findResult = await collection.find({}).toArray();\nconsole.log('Found documents =>', findResult);\n```\n\nThis query returns all the documents in the **documents** collection.\nIf you add this below the insertMany example you'll see the document's you've inserted.\n\n### Find Documents with a Query Filter\n\nAdd a query filter to find only documents which meet the query criteria.\n\n```js\nconst filteredDocs = await collection.find({ a: 3 }).toArray();\nconsole.log('Found documents filtered by { a: 3 } =>', filteredDocs);\n```\n\nOnly the documents which match `'a' : 3` should be returned.\n\n### Update a document\n\nThe following operation updates a document in the **documents** collection.\n\n```js\nconst updateResult = await collection.updateOne({ a: 3 }, { $set: { b: 1 } });\nconsole.log('Updated documents =>', updateResult);\n```\n\nThe method updates the first document where the field **a** is equal to **3** by adding a new field **b** to the document set to **1**. `updateResult` contains information about whether there was a matching document to update or not.\n\n### Remove a document\n\nRemove the document where the field **a** is equal to **3**.\n\n```js\nconst deleteResult = await collection.deleteMany({ a: 3 });\nconsole.log('Deleted documents =>', deleteResult);\n```\n\n### Index a Collection\n\n[Indexes](https://docs.mongodb.org/manual/indexes/) can improve your application's\nperformance. The following function creates an index on the **a** field in the\n**documents** collection.\n\n```js\nconst indexName = await collection.createIndex({ a: 1 });\nconsole.log('index name =', indexName);\n```\n\nFor more detailed information, see the [indexing strategies page](https://docs.mongodb.com/manual/applications/indexes/).\n\n## Error Handling\n\nIf you need to filter certain errors from our driver we have a helpful tree of errors described in [etc/notes/errors.md](https://github.com/mongodb/node-mongodb-native/blob/HEAD/etc/notes/errors.md).\n\nIt is our recommendation to use `instanceof` checks on errors and to avoid relying on parsing `error.message` and `error.name` strings in your code.\nWe guarantee `instanceof` checks will pass according to semver guidelines, but errors may be sub-classed or their messages may change at any time, even patch releases, as we see fit to increase the helpfulness of the errors.\n\nAny new errors we add to the driver will directly extend an existing error class and no existing error will be moved to a different parent class outside of a major release.\nThis means `instanceof` will always be able to accurately capture the errors that our driver throws (or returns in a callback).\n\n```typescript\nconst client = new MongoClient(url);\nawait client.connect();\nconst collection = client.db().collection('collection');\n\ntry {\n  await collection.insertOne({ _id: 1 });\n  await collection.insertOne({ _id: 1 }); // duplicate key error\n} catch (error) {\n  if (error instanceof MongoServerError) {\n    console.log(`Error worth logging: ${error}`); // special case for some reason\n  }\n  throw error; // still want to crash\n}\n```\n\n## Next Steps\n\n- [MongoDB Documentation](https://docs.mongodb.com/manual/)\n- [MongoDB Node Driver Documentation](https://docs.mongodb.com/drivers/node/)\n- [Read about Schemas](https://docs.mongodb.com/manual/core/data-modeling-introduction/)\n- [Star us on GitHub](https://github.com/mongodb/node-mongodb-native)\n\n## License\n\n[Apache 2.0](LICENSE.md)\n\nÂ© 2009-2012 Christian Amor Kvalheim\nÂ© 2012-present MongoDB [Contributors](https://github.com/mongodb/node-mongodb-native/blob/HEAD/CONTRIBUTORS.md)\n",
    "licenseText": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/mongodb/-/mongodb-4.8.1.tgz#596de88ff4519128266d9254dbe5b781c4005796",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/mongodb/-/mongodb-4.8.1.tgz",
    "hash": "596de88ff4519128266d9254dbe5b781c4005796",
    "integrity": "sha512-/NyiM3Ox9AwP5zrfT9TXjRKDJbXlLaUDQ9Rg//2lbg8D2A8GXV0VidYYnA/gfdK6uwbnL4FnAflH7FbGw3TS7w==",
    "registry": "npm",
    "packageName": "mongodb",
    "cacheIntegrity": "sha512-/NyiM3Ox9AwP5zrfT9TXjRKDJbXlLaUDQ9Rg//2lbg8D2A8GXV0VidYYnA/gfdK6uwbnL4FnAflH7FbGw3TS7w== sha1-WW3oj/RRkSgmbZJU2+W3gcQAV5Y="
  },
  "registry": "npm",
  "hash": "596de88ff4519128266d9254dbe5b781c4005796"
}