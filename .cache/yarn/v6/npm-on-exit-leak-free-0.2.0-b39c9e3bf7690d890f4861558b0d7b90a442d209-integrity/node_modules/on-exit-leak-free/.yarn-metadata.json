{
  "manifest": {
    "name": "on-exit-leak-free",
    "version": "0.2.0",
    "description": "Execute a function on exit without leaking memory, allowing all objects to be garbage collected",
    "main": "index.js",
    "scripts": {
      "test": "standard | snazzy && tap test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/mcollina/on-exit-or-gc.git"
    },
    "keywords": [
      "weak",
      "reference",
      "finalization",
      "registry",
      "process",
      "exit",
      "garbage",
      "collector"
    ],
    "author": {
      "name": "Matteo Collina",
      "email": "hello@matteocollina.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/mcollina/on-exit-or-gc/issues"
    },
    "homepage": "https://github.com/mcollina/on-exit-or-gc#readme",
    "devDependencies": {
      "snazzy": "^9.0.0",
      "standard": "^16.0.3",
      "tap": "^15.0.9"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-on-exit-leak-free-0.2.0-b39c9e3bf7690d890f4861558b0d7b90a442d209-integrity/node_modules/on-exit-leak-free/package.json",
    "readmeFilename": "README.md",
    "readme": "# on-exit-leak-free\n\nExecute a function on exit without leaking memory, allowing all objects to be garbage collected.\nListen to both `'beforeExit'` and `'exit`, executing the given function only once.\n\n\nRequires `WeakRef`, `WeakMap` and `FinalizationRegistry`, i.e. use Node v14+.\n\n## Install\n\n```bash\nnpm i on-exit-leak-free\n```\n\n## Example\n\n```js\n'use strict'\n\nconst { register, unregister } = require('on-exit-leak-free')\nconst assert = require('assert')\n\nfunction setup () {\n  // This object can be safely garbage collected,\n  // and the resulting shutdown function will not be called.\n  // There are no leaks.\n  const obj = { foo: 'bar' }\n  register(obj, shutdown)\n  // call unregister(obj) to remove\n}\n\nlet shutdownCalled = false\n\n// Please make sure that the function passed to register()\n// does not create a closure around unnecessary objects.\nfunction shutdown (obj, eventName) {\n  console.log(eventName) // beforeExit\n  shutdownCalled = true\n  assert.strictEqual(obj.foo, 'bar')\n}\n\nsetup()\n\nprocess.on('exit', function () {\n  assert.strictEqual(shutdownCalled, true)\n})\n```\n\n## License\n\nMIT\n",
    "licenseText": "MIT License\n\nCopyright (c) 2021 Matteo Collina\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/on-exit-leak-free/-/on-exit-leak-free-0.2.0.tgz#b39c9e3bf7690d890f4861558b0d7b90a442d209",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/on-exit-leak-free/-/on-exit-leak-free-0.2.0.tgz",
    "hash": "b39c9e3bf7690d890f4861558b0d7b90a442d209",
    "integrity": "sha512-dqaz3u44QbRXQooZLTUKU41ZrzYrcvLISVgbrzbyCMxpmSLJvZ3ZamIJIZ29P6OhZIkNIQKosdeM6t1LYbA9hg==",
    "registry": "npm",
    "packageName": "on-exit-leak-free",
    "cacheIntegrity": "sha512-dqaz3u44QbRXQooZLTUKU41ZrzYrcvLISVgbrzbyCMxpmSLJvZ3ZamIJIZ29P6OhZIkNIQKosdeM6t1LYbA9hg== sha1-s5yeO/dpDYkPSGFViw17kKRC0gk="
  },
  "registry": "npm",
  "hash": "b39c9e3bf7690d890f4861558b0d7b90a442d209"
}