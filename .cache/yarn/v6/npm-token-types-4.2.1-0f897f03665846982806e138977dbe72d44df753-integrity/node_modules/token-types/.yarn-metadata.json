{
  "manifest": {
    "name": "token-types",
    "version": "4.2.1",
    "description": "Common token types for decoding and encoding numeric and string values",
    "author": {
      "name": "Borewit",
      "url": "https://github.com/Borewit"
    },
    "funding": {
      "type": "github",
      "url": "https://github.com/sponsors/Borewit"
    },
    "scripts": {
      "clean": "del-cli lib/**/*.js lib/***.js.map *.d.ts test/**/*.d.ts test/**/*.js test/**/*.js.map .nyc_output",
      "build": "npm run compile",
      "compile-src": "tsc --p lib",
      "compile-test": "tsc --p test",
      "compile": "npm run compile-src && npm run compile-test",
      "lint-ts": "tslint lib/index.ts --exclude '*.d.ts' 'test/**/*.ts' --exclude 'test/**/*.d.ts'",
      "lint-md": "remark -u preset-lint-recommended .",
      "lint": "npm run lint-ts && npm run lint-md",
      "test": "mocha --require ts-node/register --require source-map-support/register --full-trace --recursive test/test-*.ts",
      "test-coverage": "nyc npm run test"
    },
    "engines": {
      "node": ">=10"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/Borewit/token-types"
    },
    "files": [
      "lib/index.js",
      "lib/index.d.ts"
    ],
    "license": "MIT",
    "main": "lib/index.js",
    "types": "lib/index.d.ts",
    "bugs": {
      "url": "https://github.com/Borewit/token-types/issues"
    },
    "devDependencies": {
      "@types/chai": "^4.3.1",
      "@types/mocha": "^9.1.0",
      "@types/node": "^18.6.3",
      "chai": "^4.3.6",
      "coveralls": "^3.1.1",
      "del-cli": "^5.0.0",
      "mocha": "^9.2.2",
      "nyc": "^15.1.0",
      "remark-cli": "^11.0.0",
      "remark-preset-lint-recommended": "^6.1.2",
      "source-map-support": "^0.5.21",
      "ts-node": "^10.9.1",
      "tslint": "^6.1.3",
      "typescript": "^4.7.4"
    },
    "dependencies": {
      "@tokenizer/token": "^0.3.0",
      "ieee754": "^1.2.1"
    },
    "remarkConfig": {
      "plugins": [
        "preset-lint-recommended"
      ]
    },
    "nyc": {
      "exclude": [
        "test/**/*.ts",
        "lib/**/*.*.js"
      ],
      "extension": [
        ".ts"
      ],
      "sourceMap": true,
      "instrument": true,
      "reporter": [
        "lcov",
        "text"
      ],
      "report-dir": "coverage"
    },
    "keywords": [
      "token",
      "integer",
      "unsigned",
      "numeric",
      "float",
      "IEEE",
      "754",
      "strtok3"
    ],
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-token-types-4.2.1-0f897f03665846982806e138977dbe72d44df753-integrity/node_modules/token-types/package.json",
    "readmeFilename": "README.md",
    "readme": "![Node.js CI](https://github.com/Borewit/token-types/workflows/Node.js%20CI/badge.svg)\n[![NPM version](https://badge.fury.io/js/token-types.svg)](https://npmjs.org/package/token-types)\n[![npm downloads](http://img.shields.io/npm/dm/token-types.svg)](https://npmcharts.com/compare/token-types,strtok3?start=1200&interval=30)\n[![coveralls](https://coveralls.io/repos/github/Borewit/token-types/badge.svg?branch=master)](https://coveralls.io/github/Borewit/token-types?branch=master)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/4723ce4613fc49cda8db5eed29f18834)](https://www.codacy.com/app/Borewit/token-types?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Borewit/token-types&amp;utm_campaign=Badge_Grade)\n[![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/Borewit/token-types.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/Borewit/token-types/context:javascript)\n[![Total alerts](https://img.shields.io/lgtm/alerts/g/Borewit/token-types.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/Borewit/token-types/alerts/)\n[![DeepScan grade](https://deepscan.io/api/teams/5165/projects/6940/branches/61852/badge/grade.svg)](https://deepscan.io/dashboard#view=project&tid=5165&pid=6940&bid=61852)\n[![Known Vulnerabilities](https://snyk.io/test/github/Borewit/token-types/badge.svg?targetFile=package.json)](https://snyk.io/test/github/Borewit/token-types?targetFile=package.json)\n\n# token-types\n\nA primitive token library used to read and write from a node `Buffer`.\nAlthough it is possible to use this module directly, it is primary designed to be used with [strtok3 tokenizer](https://github.com/Borewit/strtok3).\n\n## Installation\n\n```sh\nnpm install --save token-types\n```\nUsually in combination with [strtok3](https://github.com/Borewit/strtok3):\n```sh\nnpm install --save strtok3\n```\n\nUsing TypeScript you should also install [@tokenizer/token](https://github.com/Borewit/tokenizer-token) as a development\ndependency:\n\n```shell\nnpm install --save-dev @tokenizer/token\n```\n\n\n## Example\n\n```js\nconst strtok3 = require('strtok3');\nconst token = require('token-types');\n    \n(async () => {\n\n  const tokenizer = await strtok3.fromFile(\"somefile.bin\");\n  try {\n    const myNumber = await tokenizer.readToken(token.Float32_BE);\n    console.log(`My number: ${myNumber}`);\n  } finally {\n    tokenizer.close(); // Close the file\n  } \n})();\n```\n\n## Tokens\n\n### Numeric tokens\n\n`node-strtok` supports a wide variety of numerical tokens out of the box:\n\n| Token         | Number           | Bits | Endianness     |\n|---------------|------------------|------|----------------|\n| `UINT8`       | Unsigned integer |    8 | n/a            |\n| `UINT16_BE`   | Unsigned integer |   16 | big endian     |\n| `UINT16_LE`   | Unsigned integer |   16 | little endian  |\n| `UINT24_BE`   | Unsigned integer |   24 | big endian     |\n| `UINT24_LE`   | Unsigned integer |   24 | little endian  |\n| `UINT32_BE`   | Unsigned integer |   32 | big endian     |\n| `UINT32_LE`   | Unsigned integer |   32 | little endian  |\n| `UINT64_BE`   | Unsigned integer |   64 | big endian     |\n| `UINT64_LE`*  | Unsigned integer |   64 | little endian  |\n| `INT8`        | Signed integer   |    8 | n/a            |\n| `INT16_BE`    | Signed integer   |   16 | big endian     |\n| `INT16_LE`    | Signed integer   |   16 | little endian  |\n| `INT24_BE`    | Signed integer   |   24 | big endian     |\n| `INT24_LE`    | Signed integer   |   24 | little endian  |\n| `INT32_BE`    | Signed integer   |   32 | big endian     |\n| `INT32_LE`    | Signed integer   |   32 | little endian  |\n| `INT64_BE`    | Signed integer   |   64 | big endian     |\n| `INT64_LE`*   | Signed integer   |   64 | little endian  |\n| `Float16_BE`  | IEEE 754 float   |   16 | big endian     |\n| `Float16_LE`  | IEEE 754 float   |   16 | little endian  |\n| `Float32_BE`  | IEEE 754 float   |   32 | big endian     |\n| `Float32_LE`  | IEEE 754 float   |   32 | little endian  |\n| `Float64_BE`  | IEEE 754 float   |   64 | big endian     |\n| `Float64_LE`  | IEEE 754 float   |   64 | little endian  |\n| `Float80_BE`* | IEEE 754 float   |   80 | big endian     |\n| `Float80_LE`* | IEEE 754 float   |   80 | little endian  |\n\n### Other tokens\n\nString types:\n*   Windows-1252\n*   ISO-8859-1\n  \n*) The tokens exceed the JavaScript IEEE 754 64-bit Floating Point precision, decoding and encoding is best effort based.\n\n### Custom token\n\nComplex tokens can be added, which makes very suitable for reading binary files or network messages:\n```js\n ExtendedHeader = {\n    len: 10,\n\n    get: (buf, off) => {\n      return {\n        // Extended header size\n        size: Token.UINT32_BE.get(buf, off),\n        // Extended Flags\n        extendedFlags: Token.UINT16_BE.get(buf, off + 4),\n        // Size of padding\n        sizeOfPadding: Token.UINT32_BE.get(buf, off + 6),\n        // CRC data present\n        crcDataPresent: common.strtokBITSET.get(buf, off + 4, 31)\n      };\n    }\n  };\n```\n",
    "licenseText": "Copyright 2017 Borewit\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/token-types/-/token-types-4.2.1.tgz#0f897f03665846982806e138977dbe72d44df753",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/token-types/-/token-types-4.2.1.tgz",
    "hash": "0f897f03665846982806e138977dbe72d44df753",
    "integrity": "sha512-6udB24Q737UD/SDsKAHI9FCRP7Bqc9D/MQUV02ORQg5iskjtLJlZJNdN4kKtcdtwCeWIwIHDGaUsTsCCAa8sFQ==",
    "registry": "npm",
    "packageName": "token-types",
    "cacheIntegrity": "sha512-6udB24Q737UD/SDsKAHI9FCRP7Bqc9D/MQUV02ORQg5iskjtLJlZJNdN4kKtcdtwCeWIwIHDGaUsTsCCAa8sFQ== sha1-D4l/A2ZYRpgoBuE4l32+ctRN91M="
  },
  "registry": "npm",
  "hash": "0f897f03665846982806e138977dbe72d44df753"
}